CODE CONVENTION

Вступ
Стандартизація коду допомагає команді працювати ефективніше.
Чіткі правила забезпечують читабельність та легкість підтримки.
Приклади: зменшення часу на рев'ю та швидке виявлення помилок.

Структура коду
2
Організація проєкту: розбиття
на логічні модулі та
файли.
Приклад: папки models/, views/, controllers/.
Коментарі допомагають розділити функціонал.

Форматування коду
2
Відступи: 2 пробіли для Ruby,
ліміт 80-100 символів в
рядку.
Однорідність у вирівнюванні блоків та методів.
Приклади стилів: Allman vs K&R.
Приклад відступів:

Іменування
Використовуйте snake_case2 для змінних/методів,
CamelCase для класів.
Імена мають бути зрозумілими, лаконічними та
унікальними.
Уникайте "магічних" чисел – застосовуйте константи.

Коментарі
Коментарі пояснюють чому2 певне рішення було прийняте,
а не лише що робить код.
Використовуйте їх для опису нестандартних рішень.
Пишіть самодокументований код, щоб мінімізувати зайві
коментарі.

Документування коду
2
Використовуйте YARD для генерації
документації.
Опис параметрів, повертаних значень та приклади
використання поруч із кодом.
Документація має бути завжди актуальною.
Приклад YARD:

Конвенції стилю для Ruby
Ruby – мінімалістичний
Використовуйте інструменти для перевірки стилю: RuboCop (Ruby)

Єдність стилю сприяє легкому супроводу проекту.

Кодування на основі тестування (TDD)
Пишіть тести до реалізації2 функціоналу.
TDD допомагає виявляти помилки на ранніх етапах
розробки.
Інструменти: RSpec, Minitest для Ruby.
Приклад тесту (RSpec):

Інструменти автоматизації
Git Hooks для перевірки якості коду перед коммітом.
CI/CD для автоматичного тестування та деплойменту.
Статичний аналіз коду (SonarQube, Codacy) для виявлення недоліків.

Приклади оформлення коду
Добре структурований код 2полегшує рев'ю та підвищує
продуктивність.
Гарний код:

Приклади оформлення коду
2

Поганий код:

Приклади оформлення коду
2

Гарний код:

Приклади оформлення коду
2

Поганий код:

Висновки

Чіткі правила кодування підвищують якість проекту.
Сучасні інструменти полегшують роботу команди.
Практикуйте TDD та документуйте код для кращого
розуміння.



Посилання на YouTube:  https://youtu.be/Toju40tbaN0
Репозиторій GitHub: https://github.com/NureNikitenkoNikita/arkpz-pzpi-22-6-nikitenko-nikita